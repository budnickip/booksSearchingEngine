{"version":3,"sources":["App.js","index.js"],"names":["Formularz","props","onChange","updateDraft","value","draft","updateDResult","dMaxResult","errResult","onClick","search","Books","books","map","book","volumeInfo","title","src","imageLinks","smallThumbnail","alt","to","id","Main","Details","match","useRouteMatch","myBook","filter","params","bookId","console","log","authors","publisher","description","publishedDate","avarageRating","thumbnail","App","useState","setBooks","name","setName","setDraft","setDMaxResult","maxResult","setMaxResult","setErrResult","useEffect","fetch","then","response","ok","json","Promise","reject","result","items","catch","error","event","target","className","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7c11322.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,  \r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [draft, setDraft] = useState('')\r\n  const [searched, setSearched] = useState(false)\r\n  const [dMaxResult, setDMaxResult] = useState('')\r\n  const [maxResult, setMaxResult] = useState('10')\r\n  const [errResult, setErrResult] = useState('')\r\n  useEffect(()=>{\r\n    if(name){\r\n      fetch(`https://www.googleapis.com/books/v1/volumes?q=${name}&maxResults=${maxResult}`)\r\n      .then(response =>{\r\n        if(response.ok){\r\n            return response.json()\r\n        } else {\r\n            return Promise.reject(response)\r\n        }\r\n       })\r\n      .then((result) => {\r\n        setBooks(result.items)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Błąd pobrania API!\")\r\n      })}\r\n      \r\n  },[name])\r\n\r\n\r\n  const search = () =>{\r\n    setName(draft)\r\n    dMaxResult ? setMaxResult(dMaxResult) : setMaxResult(10)\r\n    setDraft('')\r\n    setDMaxResult('')\r\n  }\r\n\r\n  const updateDraft = (event) => {\r\n    setDraft(event.target.value)\r\n  }\r\n\r\n  const updateDResult = (event) => {\r\n    if(event.target.value > 40){\r\n      setDMaxResult(40)\r\n      setErrResult('Maksymalna wartość wynosi 40!')\r\n    }else{\r\n      setDMaxResult(event.target.value)\r\n      setErrResult('')\r\n    }\r\n  }\r\n         {/*W volumeInfo w API są informacje typu title, author. Ja wcześniej robiłem \r\n        books ? books.map((book) => <div>{book.volumeInfo.title} <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"Błąd ładowania obrazka\"/></div>) : '' \r\n        i też działało, ale kolega podpowiedział, że book można pominąć*/}\r\n\r\n  return (\r\n    <div className=\"App\">   \r\n      <Router>\r\n        <div>\r\n        <Link to=\"/\">Home</Link>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main updateDraft={updateDraft} draft={draft} search={search} books={books} errResult={errResult} updateDResult={updateDResult} dMaxResult={dMaxResult}/>\r\n          </Route>\r\n          {/* Dla githubpages, bo tam domyślna ścieżka początkowa jest /booksSearchingEngine */}\r\n          <Route exact path=\"/booksSearchingEngine\">\r\n              <Main updateDraft={updateDraft} draft={draft} search={search} books={books} errResult={errResult} updateDResult={updateDResult} dMaxResult={dMaxResult}/>\r\n          </Route>\r\n          <Route path=\"/details/:bookId\">\r\n              <Details books={books}/>\r\n          </Route>  \r\n        </Switch> \r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Formularz = (props) =>{\r\n  return(\r\n    <div>\r\n        <input onChange={props.updateDraft} value={props.draft}/>\r\n        <p>Podaj ile książek chcesz wyszukać:</p>\r\n        <input onChange={props.updateDResult} value={props.dMaxResult}/>\r\n        {props.errResult ? props.errResult : ''}\r\n        <button onClick={props.search}>Szukaj</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Books = (props)=>{\r\n  return(\r\n    <div>\r\n       {props.books ? props.books.map((book) => <div key={book.id}>{book.volumeInfo.title} \r\n          <img src={book.volumeInfo.imageLinks.smallThumbnail} alt=\"Błąd ładowania obrazka\"/>\r\n          <Link to={`/details/${book.id}`}>Details</Link>\r\n       </div>) : '' }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Main = (props)=>{\r\n  return(\r\n    <div>\r\n      <Formularz updateDraft={props.updateDraft} draft={props.draft} search={props.search} errResult={props.errResult} updateDResult={props.updateDResult} dMaxResult={props.dMaxResult}/>\r\n      <Books books={props.books} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Details = (props) =>{\r\n  let match = useRouteMatch(\"/details/:bookId\");\r\n  let myBook = props.books.filter((book) => {\r\n    return book.id === match.params.bookId\r\n  })\r\n  console.log(myBook[0])\r\n  return(\r\n    <div>\r\n      {/*console.log() */}\r\n      {  /*props.books[0].volumeInfo.info */}\r\n  \r\n      {myBook[0].volumeInfo.title ? <p>Tytuł: {myBook[0].volumeInfo.title}</p> : \"\"}\r\n      {myBook[0].volumeInfo.authors ? <p>Autorzy: {myBook[0].volumeInfo.authors}</p> : \"\"}\r\n      {myBook[0].volumeInfo.publisher ? <p>Wydawnictwo: {myBook[0].volumeInfo.publisher}</p>: \"\"}\r\n      {myBook[0].volumeInfo.description ? <p>Opis: {myBook[0].volumeInfo.description}</p> : \"\"}\r\n      {myBook[0].volumeInfo.publishedDate ? <p>Rok wydania: {myBook[0].volumeInfo.publishedDate}</p> : \"\"}\r\n      {myBook[0].volumeInfo.avarageRating ? <p>Średnia ocena: {myBook[0].volumeInfo.avarageRating}</p> : \"\"}\r\n      <img src={myBook[0].volumeInfo.imageLinks.thumbnail} alt=\"Błąd ładowania obrazka\"/>\r\n    \r\n    {/* działa props.books ? props.books.map((book) => <div>{book.id == 'AwVt-Ocw2N8C' ? book.volumeInfo.title : ''} </div>) : '' */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}