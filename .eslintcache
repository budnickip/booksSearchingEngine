[{"D:\\nauka\\react\\booksearchengine\\src\\index.js":"1","D:\\nauka\\react\\booksearchengine\\src\\App.js":"2","D:\\nauka\\react\\booksearchengine\\src\\components\\Basic\\index.js":"3","D:\\nauka\\react\\booksearchengine\\src\\components\\Form\\index.js":"4","D:\\nauka\\react\\booksearchengine\\src\\components\\Books\\index.js":"5","D:\\nauka\\react\\booksearchengine\\src\\components\\Details\\index.js":"6","D:\\nauka\\react\\booksearchengine\\src\\components\\Main\\index.js":"7","D:\\nauka\\react\\booksearchengine\\src\\components\\Header\\index.js":"8","D:\\nauka\\react\\booksearchengine\\src\\variables\\index.js":"9","D:\\nauka\\react\\booksearchengine\\src\\components\\UserPanel\\index.js":"10"},{"size":222,"mtime":1609778317982,"results":"11","hashOfConfig":"12"},{"size":4617,"mtime":1611329226009,"results":"13","hashOfConfig":"12"},{"size":898,"mtime":1611237948753,"results":"14","hashOfConfig":"12"},{"size":2106,"mtime":1611185136783,"results":"15","hashOfConfig":"12"},{"size":1870,"mtime":1611238193755,"results":"16","hashOfConfig":"12"},{"size":4133,"mtime":1611238325045,"results":"17","hashOfConfig":"12"},{"size":707,"mtime":1611237939056,"results":"18","hashOfConfig":"12"},{"size":833,"mtime":1611185175426,"results":"19","hashOfConfig":"12"},{"size":192,"mtime":1611170533315,"results":"20","hashOfConfig":"12"},{"size":2890,"mtime":1611327461280,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tyxo07",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\nauka\\react\\booksearchengine\\src\\index.js",[],["47","48"],"D:\\nauka\\react\\booksearchengine\\src\\App.js",["49","50"],"import { useEffect, useState, useRef} from 'react';\r\nimport './App.css';\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Details from './components/Details'\r\nimport Main from './components/Main'\r\nimport UserPanel from './components/UserPanel'\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [draft, setDraft] = useState('')\r\n  const [errDraft, setErrDraft] = useState('')\r\n  const [searched, setSearched] = useState(false)\r\n  const [dMaxResult, setDMaxResult] = useState('')\r\n  const [maxResult, setMaxResult] = useState('10')\r\n  const [errResult, setErrResult] = useState('')\r\n  const [open, setOpen] = useState(false)\r\n  const [iconName, setIconName] = useState(open ? 'fas fa-times' : 'fas fa-user')\r\n  const [favoriteList, setFavoriteList] = useState([])\r\n  const [bookToAdd, setBookToAdd] = useState({})\r\n  const [duplicate, setDuplicate] = useState(false)\r\n  const [testItem, setTestItem] = useState(true)\r\n  const [firstLoad, setFirstLoad] = useState(true)\r\n  //const modalRef = useRef()\r\n  //const appRef = useRef()\r\n  useEffect(()=>{\r\n    if(name){\r\n      fetch(`https://www.googleapis.com/books/v1/volumes?q=${name}&maxResults=${maxResult}`)\r\n      .then(response =>{\r\n        if(response.ok){\r\n            return response.json()\r\n        } else {\r\n            return Promise.reject(response)\r\n        }\r\n       })\r\n      .then((result) => {\r\n        setBooks(result.items)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Błąd pobrania API!\")\r\n      })}\r\n      \r\n  },[name, maxResult])\r\n\r\n\r\n  const search = () =>{\r\n    if(draft){\r\n      setName(draft)\r\n      dMaxResult ? setMaxResult(dMaxResult) : setMaxResult(10)\r\n      setDraft('')\r\n      setDMaxResult('')\r\n      setSearched(true)\r\n    }else{\r\n      setErrDraft('To pole nie może być puste!')\r\n    }\r\n  }\r\n\r\n  const updateDraft = (event) => {\r\n    setDraft(event.target.value)\r\n    setErrDraft('')\r\n  }\r\n\r\n  const updateDResult = (event) => {\r\n    if(event.target.value > 40){\r\n      setDMaxResult(40)\r\n      setErrResult('Maksymalna wartość wynosi 40!')\r\n    }else if(event.target.value < 0){\r\n      setDMaxResult(1)\r\n      setErrResult('Minimalna wartość wynosi 0!')\r\n    }else{\r\n      setDMaxResult(event.target.value)\r\n      setErrResult('')\r\n    }\r\n  }\r\n         // eslint-disable-next-line no-lone-blocks\r\n         {/*W volumeInfo w API są informacje typu title, author. Ja wcześniej robiłem \r\n        books ? books.map((book) => <div>{book.volumeInfo.title} <img src={book.volumeInfo.imageLinks.thumbnail} alt=\"Błąd ładowania obrazka\"/></div>) : '' \r\n        i też działało, ale kolega podpowiedział, że book można pominąć*/}\r\n  const toggleOpen = () =>{\r\n      setOpen(open => !open)\r\n      setIconName(open ? 'fas fa-user' : 'fas fa-times')\r\n  }\r\n\r\n  const addFavorite = (newbook) =>{\r\n    favoriteList.forEach(bookid => {if(bookid.id===newbook.id){\r\n      setDuplicate(true)\r\n    }\r\n    })\r\n    setBookToAdd(newbook)\r\n    setTestItem(testItem => !testItem)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(!firstLoad){\r\n      if(duplicate){\r\n        console.log('nie dodawaj')\r\n        alert(\"Posiadasz już ten przedmiot w ulubionych\")\r\n      }else{\r\n        setFavoriteList(prevFavoriteList => [...prevFavoriteList, bookToAdd])\r\n      }\r\n      setDuplicate(false)\r\n    }\r\n    setFirstLoad(false)\r\n  },[testItem])\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n   \r\n      <Router>\r\n        <div>\r\n        <UserPanel toggleOpen={()=>toggleOpen()} open={open} iconName={iconName} setOpen={setOpen} favoriteList={favoriteList}/>\r\n          {/* Na github przy Home muszę dać link do /bookSearchingEngine */}\r\n          <Route exact path=\"/\">\r\n            <Main updateDraft={updateDraft} draft={draft} search={search} books={books} errResult={errResult} updateDResult={updateDResult} dMaxResult={dMaxResult} errDraft={errDraft} searched={searched} addFavorite={addFavorite}/>\r\n          </Route>\r\n          {/* Dla githubpages, bo tam domyślna ścieżka początkowa jest /booksSearchingEngine */}\r\n          <Route exact path=\"/booksSearchingEngine\">\r\n              <Main updateDraft={updateDraft} draft={draft} search={search} books={books} errResult={errResult} updateDResult={updateDResult} dMaxResult={dMaxResult} errDraft={errDraft} searched={searched} addFavorite={addFavorite}/>\r\n          </Route>\r\n          <Route path=\"/details/:bookId\">\r\n              <Details addFavorite={addFavorite} />\r\n          </Route>  \r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\nauka\\react\\booksearchengine\\src\\components\\Basic\\index.js",[],"D:\\nauka\\react\\booksearchengine\\src\\components\\Form\\index.js",[],"D:\\nauka\\react\\booksearchengine\\src\\components\\Books\\index.js",["51","52"],"import { useEffect, useState } from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\nimport * as palette from '../../variables/index'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  position: relative;\r\n  top: -80px;\r\n`\r\n\r\nconst Card = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   align-items: center;\r\n   justify-content: space-between;\r\n   width: 200px;\r\n   background-color: ${palette.baseWhite};\r\n   color: ${palette.baseBackGround};\r\n   padding: 8px 16px;\r\n   margin: 30px;\r\n   border-radius: 7px;\r\n`\r\n\r\nconst More = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${palette.ornaments};\r\n  transition: .1s ease-in-out;\r\n  align-self: flex-end;\r\n  &:hover{\r\n    font-weight: 700;\r\n  }\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin: 10px 0px;\r\n`\r\n\r\nconst Paragraph = styled.p`\r\n  font-weight: 600;\r\n`\r\n\r\nconst CardFooter = styled.div`\r\n   width: 100%;\r\n   display: flex;\r\n   justify-content: space-between;\r\n`\r\n\r\nconst Icon = styled.span`\r\n   color: ${palette.ornaments};\r\n   cursor: pointer;\r\n   &:hover{\r\n      color: ${palette.lighterOrnaments};\r\n   }\r\n`\r\n\r\nconst Books = (props)=>{\r\n\r\n\r\n\r\n    return(\r\n      <Container>\r\n         {props.books ? props.books.map((book) => \r\n         <Card key={book.id}>\r\n            <Paragraph>{book.volumeInfo.title}</Paragraph>\r\n            <Image src={book.volumeInfo.imageLinks.smallThumbnail} alt=\"Błąd ładowania obrazka\"/>\r\n            <CardFooter>\r\n               <Icon className=\"fas fa-heart\" onClick={() => props.addFavorite({title: book.volumeInfo.title, img: book.volumeInfo.imageLinks.smallThumbnail, id: book.id})}></Icon> \r\n               <More to={`/details/${book.id}`}>Szczegóły</More>\r\n            </CardFooter>\r\n         </Card>) : '' }\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Books","D:\\nauka\\react\\booksearchengine\\src\\components\\Details\\index.js",["53"],"import { useEffect, useState } from 'react';\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport * as palette from '../../variables';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  margin: 2em;\r\n  line-height: 1.2em;\r\n`\r\nconst Image = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n  margin: 1em;\r\n`\r\n\r\nconst Paragraph = styled.p`\r\n  margin: 0.8em;\r\n  width: 100%;\r\n`\r\n\r\nconst Distinction = styled.span`\r\n  display: block;\r\n  color: ${palette.darkerWhite};\r\n  font-weight: 700;\r\n`\r\n\r\nconst More = styled(Link)`\r\n  text-decoration: none;\r\n  background-color: ${palette.ornaments};\r\n  color: ${palette.darkerWhite};\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  padding: 8px 18px;\r\n  border-radius: 5px;\r\n  transition: .3s ease-in-out;\r\n  margin-right: 15px;\r\n  &:hover{\r\n    background-color: ${palette.darkerWhite};\r\n    color: ${palette.ornaments};\r\n  }\r\n`\r\n\r\nconst Icon = styled.span`\r\n  background-color: ${palette.ornaments};\r\n  color: ${palette.darkerWhite};\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  padding: 8px 18px;\r\n  border-radius: 5px;\r\n  transition: .3s ease-in-out;\r\n  cursor: pointer;\r\n  margin-left: 15px;\r\n  &:hover{\r\n    background-color: ${palette.darkerWhite};\r\n    color: ${palette.ornaments};\r\n  }\r\n`\r\n\r\nconst BookDetails = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst BookInformation = styled.div`\r\n  min-width: 200px;\r\n  flex: 1;\r\n`\r\n\r\nconst BookDescription = styled.div`\r\n  min-width: 350px;\r\n  flex: 3;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Details = (props) =>{\r\n    let match = useRouteMatch(\"/details/:bookId\");\r\n    const [searchedBook, setSearchedBook] = useState('')\r\n    useEffect(()=>{\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${match.params.bookId}`)\r\n        .then(response =>{\r\n          if(response.ok){\r\n              return response.json()\r\n          } else {\r\n              return Promise.reject(response)\r\n          }\r\n         })\r\n        .then((result) => {\r\n          setSearchedBook(result.items)\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Błąd pobrania API!\")\r\n        })\r\n        },[])\r\n  \r\n    return(\r\n      <Container>\r\n        {searchedBook[0]?.volumeInfo.imageLinks.thumbnail ? <Image><img src={searchedBook[0]?.volumeInfo.imageLinks.thumbnail} alt=\"Błąd ładowania obrazka\"/></Image> : \"\"}\r\n        {searchedBook[0]?.volumeInfo.title ? <Title>{searchedBook[0]?.volumeInfo.title}</Title> : \"\"}\r\n        <BookDetails>\r\n          <BookInformation>\r\n            {searchedBook[0]?.volumeInfo.authors ? <Paragraph><Distinction>Autorzy:</Distinction> {searchedBook[0]?.volumeInfo.authors}</Paragraph> : \"\"}\r\n            {searchedBook[0]?.volumeInfo.publisher ? <Paragraph><Distinction>Wydawnictwo:</Distinction> {searchedBook[0]?.volumeInfo.publisher}</Paragraph>: \"\"}\r\n            {searchedBook[0]?.volumeInfo.publishedDate ? <Paragraph><Distinction>Rok wydania:</Distinction> {searchedBook[0]?.volumeInfo.publishedDate}</Paragraph> : \"\"}\r\n            {searchedBook[0]?.volumeInfo.avarageRating ? <Paragraph><Distinction>Średnia ocena:</Distinction> {searchedBook[0]?.volumeInfo.avarageRating}</Paragraph> : \"\"}\r\n          </BookInformation>\r\n          <BookDescription>\r\n            {searchedBook[0]?.volumeInfo.description ? <Paragraph><Distinction>Opis:</Distinction> {searchedBook[0]?.volumeInfo.description}</Paragraph> : \"\"}\r\n          </BookDescription>\r\n        </BookDetails>\r\n        <Buttons>\r\n          <More to=\"/booksSearchingEngine\">Powrót</More>\r\n          <Icon className=\"fas fa-heart\" onClick={() => props.addFavorite({title: searchedBook[0]?.volumeInfo.title, img: searchedBook[0]?.volumeInfo.imageLinks.smallThumbnail, id: searchedBook[0]?.id})}> Dodaj do ulubionych</Icon> \r\n        </Buttons>\r\n      </Container>\r\n    )\r\n  }\r\n\r\nexport default Details","D:\\nauka\\react\\booksearchengine\\src\\components\\Main\\index.js",["54"],"import Form from '../Form'\r\nimport Books from '../Books'\r\nimport Basic from '../Basic'\r\nimport Header from '../Header'\r\n\r\n\r\nconst Main = (props)=>{\r\n\r\n    return(\r\n      <div>\r\n        <Header updateDraft={props.updateDraft} draft={props.draft} search={props.search} errResult={props.errResult} updateDResult={props.updateDResult} dMaxResult={props.dMaxResult} errDraft={props.errDraft}/>\r\n        {!props.searched ? <Basic addFavorite={props.addFavorite}/> : ''}\r\n        <Books books={props.books} favoriteList={props.favoriteList} addFavorite={props.addFavorite}/>\r\n        {/*<button onClick={() => props.addFavorite('nowa książka')}>Add</button> */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Main","D:\\nauka\\react\\booksearchengine\\src\\components\\Header\\index.js",[],"D:\\nauka\\react\\booksearchengine\\src\\variables\\index.js",[],"D:\\nauka\\react\\booksearchengine\\src\\components\\UserPanel\\index.js",["55","56","57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":31,"nodeType":"65","messageId":"66","endLine":1,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":108,"column":5,"nodeType":"69","endLine":108,"endColumn":15,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":19},{"ruleId":"63","severity":1,"message":"72","line":1,"column":21,"nodeType":"65","messageId":"66","endLine":1,"endColumn":29},{"ruleId":"67","severity":1,"message":"73","line":110,"column":11,"nodeType":"69","endLine":110,"endColumn":13,"suggestions":"74"},{"ruleId":"63","severity":1,"message":"75","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":12},{"ruleId":"63","severity":1,"message":"71","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":19},{"ruleId":"63","severity":1,"message":"72","line":1,"column":21,"nodeType":"65","messageId":"66","endLine":1,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":1,"column":31,"nodeType":"65","messageId":"66","endLine":1,"endColumn":37},{"ruleId":"63","severity":1,"message":"76","line":2,"column":15,"nodeType":"65","messageId":"66","endLine":2,"endColumn":28},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bookToAdd', 'duplicate', and 'firstLoad'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFavoriteList' needs the current value of 'bookToAdd'.","ArrayExpression",["79"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.bookId'. Either include it or remove the dependency array.",["80"],"'Form' is defined but never used.","'useRouteMatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [bookToAdd, duplicate, firstLoad, testItem]",{"range":"85","text":"86"},"Update the dependencies array to be: [match.params.bookId]",{"range":"87","text":"88"},[3400,3410],"[bookToAdd, duplicate, firstLoad, testItem]",[2436,2438],"[match.params.bookId]"]